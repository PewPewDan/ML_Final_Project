setwd("/Users/home/Library/CloudStorage/Dropbox/UT/2022_Spring/ECO 395M_DATA MINING/GitHub/ML_Final_Project")
library(gamlr)
library(tidyverse)
library(mosaic)
library(foreach)
library(modelr)
library(rsample)
library(rms)
library(aod)
library(ggplot2)
library(caret)
library(parallel)
library(MASS)
library(psych)
library(dplyr)
library(leaps)
library(lars)
Final_Data = read.csv("data/Final_Data.csv")
Final_Data = read.csv("Data/Final_Data.csv")
Final_Data <- read.csv("~/Library/CloudStorage/Dropbox/UT/2022_Spring/ECO 395M_DATA MINING/GitHub/ML_Final_Project/Data/Final_Data.csv")
View(Final_Data)
Final_Data <- read.csv("~/Library/CloudStorage/Dropbox/UT/2022_Spring/ECO 395M_DATA MINING/GitHub/ML_Final_Project/Data/Final_Data.csv")
setwd("/Users/home/Library/CloudStorage/Dropbox/UT/2022_Spring/ECO 395M_DATA MINING/GitHub/ML_Final_Project")
library(gamlr)
library(tidyverse)
library(mosaic)
library(foreach)
library(modelr)
library(rsample)
library(rms)
library(aod)
library(ggplot2)
library(caret)
library(parallel)
library(MASS)
library(psych)
library(dplyr)
library(leaps)
library(lars)
Final_Data <- read.csv("~/Library/CloudStorage/Dropbox/UT/2022_Spring/ECO 395M_DATA MINING/GitHub/ML_Final_Project/Data/Final_Data.csv")
set.seed(353)
#Stepwise Variables
X2 <- Final_Data[,-c(2:5)]
full_model <- lm(data = X2, `W.L` ~ .)
Stepwise_10 <- regsubsets(`W.L` ~ . , data = X2, nv = 10,
method = "seqrep")
#Lasso Variables
X<-Final_Data[,-c(1:5)]
X <- data.matrix(X, rownames.force = NA)
Lasso_Model = lars(X, Final_Data$`W.L`)
Lasso_Coef <- coef(Lasso_Model)
set.seed(343)
probit_split = initial_split(Final_Data, prop = 2/3)
probit_train = training(probit_split)
probit_test = testing(probit_split)
control = trainControl(method = "boot", number = 100)
Probit_Lasso_Train = train(as.factor(W.L) ~ Total_goal_differential+GA.in.P2+W..SF+Net.PK. +
Win..Lead.2P+Win..3.Goal.Game+Pen.Drawn.60 +
Shot_Differential+RW, data = probit_train,
method = "glm", family = binomial(link = "probit"),
trControl = control)
Probit_Lasso_Predict = predict(Probit_Lasso_Train, probit_test)
confusion_out = table(y = probit_test$W.L, yhat = Probit_Lasso_Predict)
Probit_Lasso_Confusion_Matrix = confusion_out
Probit_Lasso_Accuracy = sum(diag(confusion_out))/sum(confusion_out)
Probit_Lasso_Confusion_Matrix
Probit_Lasso_Accuracy
set.seed(343)
playoff.plr <- polr(as.factor(`Win_Margin`) ~ Pen.Drawn.60 + `RW` + Total_goal_differential + `Net.PK.` + Shot_Differential + `GA.in.P2` + `W..SF` + `Win..3.Goal.Game` + `Win..Lead.2P`, method = "probit", data = Final_Data)
playoff.plr
summary(update(playoff.plr, method = "probit"))
test = predict(playoff.plr)
Ordered_Probit_Lasso = table(Final_Data$Win_Margin, test)
sum(diag(Ordered_Probit_Lasso)) / sum(Ordered_Probit_Lasso)
max(sum(Ordered_Probit_Lasso[1,]),
sum(Ordered_Probit_Lasso[2,]),
sum(Ordered_Probit_Lasso[3,]),
sum(Ordered_Probit_Lasso[4,]),
sum(Ordered_Probit_Lasso[5,]),
sum(Ordered_Probit_Lasso[6,]),
sum(Ordered_Probit_Lasso[7,]),
sum(Ordered_Probit_Lasso[8,]))
Ordered_Probit_Lasso
Probit_Lasso_Matrix
#Stepwise Variables
X2 <- Final_Data[,-c(2:5)]
full_model <- lm(data = X2, `W.L` ~ .)
Stepwise_10 <- regsubsets(`W.L` ~ . , data = X2, nv = 10,
method = "seqrep")
#Lasso Variables
X<-Final_Data[,-c(1:5)]
X <- data.matrix(X, rownames.force = NA)
Lasso_Model = lars(X, Final_Data$`W.L`)
Lasso_Coef <- coef(Lasso_Model)
set.seed(343)
probit_split = initial_split(Final_Data, prop = 2/3)
probit_train = training(probit_split)
probit_test = testing(probit_split)
control = trainControl(method = "boot", number = 100)
Probit_Lasso_Train = train(as.factor(W.L) ~ Total_goal_differential+GA.in.P2+W..SF+Net.PK. +
Win..Lead.2P+Win..3.Goal.Game+Pen.Drawn.60 +
Shot_Differential+RW, data = probit_train,
method = "glm", family = binomial(link = "probit"),
trControl = control)
Probit_Lasso_Predict = predict(Probit_Lasso_Train, probit_test)
confusion_out = table(y = probit_test$W.L, yhat = Probit_Lasso_Predict)
Probit_Lasso_Confusion_Matrix = confusion_out
Probit_Lasso_Accuracy = sum(diag(confusion_out))/sum(confusion_out)
Probit_Lasso_Confusion_Matrix
Probit_Lasso_Accuracy
set.seed(343)
playoff.plr <- polr(as.factor(`Win_Margin`) ~ Pen.Drawn.60 + `RW` + Total_goal_differential + `Net.PK.` + Shot_Differential + `GA.in.P2` + `W..SF` + `Win..3.Goal.Game` + `Win..Lead.2P`, method = "probit", data = Final_Data)
playoff.plr
summary(update(playoff.plr, method = "probit"))
test = predict(playoff.plr)
Ordered_Probit_Lasso = table(Final_Data$Win_Margin, test)
sum(diag(Ordered_Probit_Lasso)) / sum(Ordered_Probit_Lasso)
max(sum(Ordered_Probit_Lasso[1,]),
sum(Ordered_Probit_Lasso[2,]),
sum(Ordered_Probit_Lasso[3,]),
sum(Ordered_Probit_Lasso[4,]),
sum(Ordered_Probit_Lasso[5,]),
sum(Ordered_Probit_Lasso[6,]),
sum(Ordered_Probit_Lasso[7,]),
sum(Ordered_Probit_Lasso[8,]))
Ordered_Probit_Lasso
Probit_Lasso_Matrix
